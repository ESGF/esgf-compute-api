version: 2

checkout:
  post:
    - ./ci-support/checkout_merge_commit.sh
        
aliases:

  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir -p workspace
      git clone -b validateNightly --depth 1 git@github.com:CDAT/cdat workspace/cdat
      python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'
      
  - &create_conda_env
    name: create_conda_env
    environment:
       PKGS: "setuptools owslib requests pip flake8 numpy pytest pytest-cov mock"
       CHANNELS: "-c conda-forge"
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       conda config --set always_yes yes --set changeps1 no
       conda update -y -q conda
       conda config --set anaconda_upload no
       if [[ $PY_VER = "py2" ]]; then
          conda create -q -n $PY_VER $CHANNELS $PKGS 'python<3' ${CONDA_COMPILERS}
       else
          conda create -q -n $PY_VER $CHANNELS $PKGS 'python>=3.6' ${CONDA_COMPILERS} $COVERAGE_PKGS
       fi
    
  - &setup_cwt_api
    name: setup_cwt_api
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       source activate $PY_VER

       if [[ -e $GCC ]]; then
        env CC=${GCC} LDSHARED="${GCC} ${LDSHARED_FLAGS}" python setup.py install
       else
        env CC=${CC} LDSHARED="${CC} ${LDSHARED_FLAGS}" python setup.py install
       fi
       rm -rf build

  - &run_cwt_api_tests
    name: run_cwt_api_tests
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export CDAT_ANONYMOUS_LOG=False
       source activate $PY_VER
       pytest cwt/tests --junit-xml=junit.xml --cov=cwt --cov-report=xml
       flake8 --format=pylint --output-file=flake8.xml --tee --show-source --statistics  --max-line-length=120 cwt/*.py
       RESULT=$?
       echo "*** $PY_VER test result: "$RESULT
       exit $RESULT

  - &conda_upload
    name: conda_upload
    environment:
       CHANNELS: "-c conda-forge"
    command: |
       if [[ $CIRCLE_BRANCH != 'devel' ]]; then
          exit 0
       fi
       export PATH=${HOME}/project/$WORKDIR/miniconda/bin:$PATH
       conda install conda-build anaconda-client
       conda config --set anaconda_upload no
       export CONDA_BLD_PATH=`pwd`/conda_build
       conda build conda $CHANNELS
       anaconda -t $CONDA_UPLOAD_TOKEN upload -u cdat -l nightly $CONDA_BLD_PATH/noarch/*.tar.bz2 --force

jobs:
  macos_cwt_api_py3:
    macos:
      xcode: "9.2.0"
    environment:
      WORKDIR: "test_macos_cwt_api_py3"
      OS: "osx-64"
      CONDA_COMPILERS: "clang_osx-64"
      LDSHARED_FLAGS: "-bundle -undefined dynamic_lookup"
      PY_VER: "py3"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *setup_cwt_api
      - run: *run_cwt_api_tests
      - store_artifacts:
          path: junit.xml
          destination: junit.xml
      - store_artifacts:
          path: coverage.xml
          destination: coverage.xml
      - store_artifacts:
          path: flake8.xml
          destination: flake8.xml

  linux_cwt_api_py2:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "test_linux_cwt_api_py2"
      OS: "linux-64"
      CONDA_COMPILERS: "gcc_linux-64"
      LDSHARED_FLAGS: "-shared -pthread"
      PY_VER: "py2"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *setup_cwt_api
      - run: *run_cwt_api_tests
      - store_artifacts:
          path: junit.xml
          destination: junit.xml
      - store_artifacts:
          path: coverage.xml
          destination: coverage.xml
      - store_artifacts:
          path: flake8.xml
          destination: flake8.xml

  linux_cwt_api_py3:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "test_linux_cwt_api_py3"
      OS: "linux-64"
      CONDA_COMPILERS: "gcc_linux-64"
      LDSHARED_FLAGS: "-shared -pthread"
      PY_VER: "py3"
      COVERAGE_PKGS: "coverage coveralls"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *setup_cwt_api
      - run: *run_cwt_api_tests
      - run: *conda_upload
      - store_artifacts:
          path: junit.xml
          destination: junit.xml
      - store_artifacts:
          path: coverage.xml
          destination: coverage.xml
      - store_artifacts:
          path: flake8.xml
          destination: flake8.xml


workflows:
  version: 2
  cwt_api:
    jobs:
        #      - macos_cwt_api_py3
      - linux_cwt_api_py2
      - linux_cwt_api_py3:
           requires:
              - linux_cwt_api_py2






